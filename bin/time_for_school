#!/usr/bin/env ruby

require_relative "../lib/user.rb"
require_relative "../lib/teacher.rb"
require_relative "../lib/student.rb"

steve = Student.new
steve.first_name = "Steve"
steve.last_name = "Jobs"

avi = Teacher.new
avi.first_name = "Avi"
avi.last_name = "Flombaum"

david = Student.new
david.first_name = "David"
david.last_name = "Weinstein"

some_knowledge = avi.teach
more_knowledge = avi.teach

diff_knowledge = avi.teach

david.learn(diff_knowledge)
steve.learn(some_knowledge)
steve.learn(more_knowledge)

puts "Steve just learned this important knowledge: '#{steve.knowledge.sample}' from Avi."
puts "David just learned '#{david.knowledge.sample}'."

jim = User.new
jim.first_name = "Jim"
jim.last_name = "Cirigliano"
#
#
# We have a new user, Jim, who is just here to audit a few classes. He is neither a teacher nor a student.
#Create a local variable, jim, and point it equal to an instance of the User class.
#Then, give jim a first and last name. What happens when you try to call #learn on jim?
# Continue to operate on our student, steve. Have avi teach him some more important knowledge.
# Create a new student and have that student learn a few things from avi as well.
# Then, puts out the existing knowledge of each student
